{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"index",
				"indexTable"
			],
			[
				"load",
				"loadedOrc"
			],
			[
				"file",
				"filesystem"
			],
			[
				"allevent",
				"allEvents"
			],
			[
				"all",
				"allEvents"
			],
			[
				"Object",
				"ObjectManager:Destroy"
			],
			[
				"animation",
				"animationComponentParent"
			],
			[
				"can",
				"canBeReplayed"
			],
			[
				"loop",
				"loopCount"
			],
			[
				"sle",
				"selectedAnimation"
			],
			[
				"when",
				"whenDonePlay"
			],
			[
				"anim",
				"animation"
			],
			[
				"selected",
				"selectedAnimation"
			],
			[
				"humanCh",
				"humanChat2"
			],
			[
				"Animation",
				"AnimationComponent"
			],
			[
				"Anim",
				"AnimationComponent"
			],
			[
				"orc",
				"orcIdle2"
			],
			[
				"Ma",
				"MapObject"
			],
			[
				"hum",
				"humanWalk1"
			],
			[
				"Sprites",
				"Sprites"
			],
			[
				"Map",
				"MapObjects"
			],
			[
				"AnimationCom",
				"AnimationComponent"
			],
			[
				"play",
				"playName"
			],
			[
				"sel",
				"selectedAnimation"
			],
			[
				"incre",
				"increasingZoomSpeed"
			],
			[
				"use",
				"useIncreasingZoom"
			],
			[
				"destroy",
				"destroyThisCollisionObject"
			],
			[
				"objec",
				"Objects"
			],
			[
				"sprite",
				"spriteWidth"
			],
			[
				"add",
				"addFrameButtons"
			],
			[
				"x",
				"xView"
			],
			[
				"sele",
				"selectedCamera"
			],
			[
				"selet",
				"selectedCameraIndex"
			],
			[
				"text",
				"textTable"
			],
			[
				"defaul",
				"defaultPos"
			],
			[
				"spriteShe",
				"spriteSheet"
			],
			[
				"frame",
				"frames"
			],
			[
				"horizontal",
				"horizontalLine"
			],
			[
				"Mul",
				"MulPoint"
			],
			[
				"Mat",
				"Matrix:Multiply"
			],
			[
				"cente",
				"centerView"
			],
			[
				"head",
				"headLength"
			],
			[
				"vis",
				"visualStyle"
			],
			[
				"vi",
				"visualStyleFunctions"
			],
			[
				"Crea",
				"CreatePixelBoxStyle"
			],
			[
				"Create",
				"CreatePolygonStyle"
			],
			[
				"Ar",
				"Arrow"
			],
			[
				"object",
				"objectList"
			],
			[
				"Draw",
				"DrawList"
			],
			[
				"move",
				"moveNodeVector"
			],
			[
				"Updat",
				"UpdateMoveNodes"
			],
			[
				"mov",
				"moveNodes"
			],
			[
				"tempVecto",
				"tempVector"
			],
			[
				"selecte",
				"selectedCamera"
			],
			[
				"camera",
				"cameras"
			],
			[
				"empy",
				"emptySlotDefault"
			],
			[
				"SnapG",
				"SnapGridTestLevel"
			],
			[
				"level",
				"LevelManager"
			],
			[
				"le",
				"levelNames"
			],
			[
				"Leel",
				"LevelManager"
			],
			[
				"next",
				"nextLevel"
			],
			[
				"LEvel",
				"LevelManager"
			],
			[
				"levelS",
				"levelSelectIndex"
			],
			[
				"levle",
				"levelSelectIndex"
			],
			[
				"new",
				"newObjectsOwnedBySave"
			],
			[
				"exclude",
				"excludeNewFromLevel"
			],
			[
				"exclu",
				"excludeNewFromLevel"
			],
			[
				"defa",
				"defaultLevel"
			],
			[
				"leve",
				"levelNames"
			],
			[
				"Level",
				"LevelManager"
			],
			[
				"current",
				"currentLevel"
			],
			[
				"curren",
				"currentLevel"
			],
			[
				"curr",
				"currentLevel"
			],
			[
				"even",
				"eventIndex"
			],
			[
				"event",
				"eventTexts"
			],
			[
				"ma",
				"maxCount"
			],
			[
				"y",
				"ySpace"
			],
			[
				"scroll",
				"scrollDownButton"
			],
			[
				"scrol",
				"scrollUpButton"
			],
			[
				"butt",
				"openCloseButton"
			],
			[
				"bar",
				"barCollision"
			],
			[
				"size",
				"SizeMinimized"
			],
			[
				"ObjectUpdat",
				"ObjectUpdater:Destroy"
			],
			[
				"Obje",
				"ObjectUpdater:AddStatic"
			],
			[
				"slidebox",
				"slideBoxTotal"
			],
			[
				"slide",
				"slideBox"
			],
			[
				"slidebo",
				"slideBox"
			],
			[
				"te",
				"text"
			],
			[
				"slideBox",
				"slideBoxIndex"
			],
			[
				"slideBo",
				"slideBoxIndex"
			],
			[
				"multline",
				"multiLineText"
			],
			[
				"slid",
				"slideBox"
			],
			[
				"multi",
				"multiLineText"
			],
			[
				"m",
				"multiLineYSpace"
			],
			[
				"mutl",
				"multiLineText"
			],
			[
				"mul",
				"multiLineText"
			],
			[
				"GetWidth",
				"GetWidthTempText"
			],
			[
				"temp",
				"tempText"
			],
			[
				"wi",
				"width"
			],
			[
				"Sliding",
				"SlidingBoxSetup"
			],
			[
				"Update",
				"UpdateFunction"
			],
			[
				"typing",
				"typingAnimation"
			],
			[
				"typingAnimat",
				"typingAnimationType"
			],
			[
				"width",
				"widthPad"
			],
			[
				"tile",
				"tileWidth"
			],
			[
				"select",
				"selectedIndex"
			],
			[
				"Inv",
				"Inventory"
			],
			[
				"targ",
				"targetPos"
			],
			[
				"require",
				"requireReaction"
			],
			[
				"tag",
				"targetPos"
			],
			[
				"other",
				"otherRequiredReactions"
			],
			[
				"random",
				"randomNameGet"
			],
			[
				"ju",
				"jumpToFromHere"
			],
			[
				"act",
				"actions"
			],
			[
				"requi",
				"requireReaction"
			],
			[
				"failM",
				"failMessage"
			],
			[
				"jump",
				"jumpOver"
			],
			[
				"no",
				"noReactionFunc"
			],
			[
				"Mao",
				"MapObject"
			],
			[
				"failMe",
				"failMessageFirst"
			],
			[
				"Target",
				"TargetHasReaction"
			],
			[
				"fail",
				"failMessageFirst"
			],
			[
				"Mapo",
				"MapObject_Action"
			],
			[
				"argument",
				"argumentIndex"
			],
			[
				"Remove",
				"Remove"
			],
			[
				"emptyslot",
				"emptySlotDefaultIndex"
			],
			[
				"empt",
				"emptySlotDefaultIndex"
			],
			[
				"empty",
				"emptySlotDefault"
			]
		]
	},
	"buffers":
	[
		{
			"file": "levels/TextWriteLevel.lua",
			"settings":
			{
				"buffer_size": 4609,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Bool.lua",
			"settings":
			{
				"buffer_size": 1165,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "-- TextfileWriter.lua\n\n-- Purpose\n---------------------\n-- can read and write text file with simple function calls\n-- use for modifying large chunks of similar code and other things etc\n\n-----------------------------------------------------------\n\nlocal Textfile = {}\n\n-----------------\n-- Static Info\n-----------------\nTextfile.Info = Info:New\n{\n	objectType = \"Textfile\",\n	dataType = \"File IO\",\n	structureType = \"Static\"\n}\n\nTextfile.currentDirectory = \"game\"\n\n------------\n-- Object\n------------\nfunction Textfile:New(data)\n\n	local o = {}\n\n	------------\n	-- Info\n	------------\n\n	o.Info = Info:New\n	{\n		name = data.name or \"...\",\n		objectType = \"Textfile\",\n		dataType = \"File IO\",\n		structureType = \"Object\"\n		dostuff = function(i)\n			i = i + 1\n		end \n	}\n\n\n	o.Info[\"dostuff\"]()\n	o.Info.dostuff()\n\n	indexTable = {1,2,3,5}\n \n	print\n\n\n	------------\n	-- Vars\n	------------\n\n	o.textTable = {}\n	o.text = data.text or \"\"\n	o.filename = data.filename or \"textFile\"\n	o.directory = data.directory or nil\n\n	-------------------------------\n	-- Functions\n	-------------------------------\n\n	-- add a new line to the text table\n	-- txt = string\n	function o:AddLine(text)\n		\n		-- no first line?\n		if(o.text == \"\") then\n			o.text = o.text .. text \n\n		-- else add new line as normal\n		else \n			o.text = o.text .. \"\\r\\n\" .. text \n		end \n\n	end\n\n	function o:AddLineCode(text)\n		o.text = o.text .. text\n	end \n\n	--{text = {string, string, ...}}\n	function o:AddLineFromTable(data)\n\n		o.text = o.text .. \"\\r\\n\"\n\n		for i=1, #data.text do\n			o.text = o.text .. data.text[i] .. \" \"\n		end \n\n	end\n\n	-- adds the vars named in .index of given table to text in a line by line format\n	-- file --\n	--------------\n	-- varName\n	-- varValue\n	-- varName\n	-- ...\n	--------------\n	-- simple but might be slow, will need to be tested\n	function o:AddAllTableVars(data)\n\n		for i=1, #data.index do\n			self:AddLine(data.index[i])\n			self:AddLine(data[data.index[i]])\n		end \n\n	end\n\n	-- adds table as lua code to text\n	-- (t = table) \n	function o:AddTable(t)\n\n		-- must contain .index\n		if(t.index == nil) then\n			printDebug{\"Table does not contain .index\", \"Textfile\"}\n			return\n		end \n\n		self:AddLine(\"local \" .. t.name .. \" = {\")\n\n		local indexTable = \"index = {\"\n\n		for i=1, #t.index do\n			self:AddLine(\"  \" .. t.index[i] .. \" = \" .. t[t.index[i]] .. \",\")\n			indexTable = indexTable .. t.index[i] .. \",\"\n		end\n\n		indexTable = indexTable .. \"}\"\n		self:AddLine(indexTable)\n\n\n		self:AddLine(\"}\")\n		self:AddLine(\"return \" .. t.name)\n\n	end \n\n\n	-- sets the directory to save in\n	-- this will be moved to FileManager so that all file types may use it\n	-- I dont mind files storing a var where they want to be saved tho\n	function o:SetDirectory()\n\n		-- directory defined for reading/writing?\n		if(self.directory) then\n\n			print(self.directory)\n			-- last directory used is same as this object's?\n			-- do nothing\n			if(self.directory == Textfile.currentDirectory) then\n				print(\"already at this directory\")\n				return\n			end \n\n			-- set the directory\n			Textfile.currentDirectory = self.directory\n			love.filesystem.setIdentity(self.directory)\n			print(love.filesystem.getIdentity())\n\n		-- no directory defined?\n		else\n			-- set to default game directory -->turn into var\n			love.filesystem.setIdentity(\"game\")\n		end\n		\n	end \n\n	-- (dir = string --> directory name)\n	function o:Save(dir)\n\n		--[[\n		-- no directory given?\n		if(dir == nil) then\n\n			-- use self.directory\n			self:SetDirectory()\n\n		-- directory was given as argument\n		else \n			love.filesystem.setIdentity(dir)\n		end\n		--]]\n\n		-- write text to file\n		love.filesystem.write(self.filename, self.text)\n		EventLog:Add{\"Save: \" .. self.filename}\n\n	end\n\n	-- reads the whole file as a single string\n	function o:Read()\n		self:SetDirectory()\n		self.text = love.filesystem.read(self.filename)\n	end\n\n	function o:GetRead()\n		return love.filesystem.read(self.filename)\n	end \n	\n	-- reads file into indexed table\n	function o:ReadLines()\n		for line in love.filesystem.lines(self.filename) do\n			self.textTable[#self.textTable + 1] = line\n		end\n	end\n\n	-- return file as indexed table\n	function o:ReadLinesToTable()\n		local tempTable = {}\n\n		for line in love.filesystem.lines(self.filename) do\n			tempTable[#tempTable+1] = line\n		end \n\n		return tempTable\n	end\n\n	function o:Destroy()\n		ObjectManager:Destroy()\n	end \n\n	-----------\n	-- End\n	-----------\n\n	return o\n\nend \n\n\n\nreturn Textfile\n\n\n-- Notes\n--------------------------------------\n-->NEED\n-- lua file writing/reading features \n-- such as tables, functions, vars etc\n\n\n-- Text Commands\n--[[\n\n\\a	bell\n\\b	back space\n\\f	form feed\n\\n	newline\n\\r	carriage return\n\\t	horizontal tab\n\\v	vertical tab\n\\\\	backslash\n\\\"	double quote\n\\'	single quote\n\\[	left square bracket\n\\]	right square bracket\n\n--]]\n",
			"file": "Textfile.lua",
			"file_size": 4957,
			"file_write_time": 130950672772520816,
			"settings":
			{
				"buffer_size": 4735,
				"line_ending": "Windows"
			}
		},
		{
			"file": "main.lua",
			"settings":
			{
				"buffer_size": 3759,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Text.lua",
			"settings":
			{
				"buffer_size": 8767,
				"line_ending": "Windows"
			}
		},
		{
			"file": "FileManager.lua",
			"settings":
			{
				"buffer_size": 3455,
				"line_ending": "Windows",
				"name": "-- FileManager.lua"
			}
		},
		{
			"contents": "-- EventLog.lua\n\n-- Purpose\n--------------------------\n-- records and displays things that happen at runtime\n-- in text format\n\n\n----------------\n-- Requires\n----------------\nlocal Text = require(\"Text\")\nlocal Pos = require(\"Pos\")\nlocal Textfile = require(\"Textfile\")\n\n-----------------------------------------\n\n-- global\nEventLog = {}\n\n\n\n-------------\n-- Info\n-------------\nEventLog.Info = Info:New\n{\n	objectType = \"EventLog\",\n	dataType = \"Information\",\n	structureType = \"Manager\"\n}\n\n-----------------\n-- Vars\n-----------------\nEventLog.eventTexts = {}\nEventLog.allEvents = {}\nEventLog.maxCount = 5\nEventLog.ySpace = 18\nEventLog.eventIndex = 1\n\n-- this is the rogue object at the start of main\n-- before any objects are loaded\n-- seems fine\n-- there will also be ui before load so no big deal\n-- problem is it keeps getting deleted on level Exit\n-- trying to figure out why\nEventLog.Pos = Pos:New\n{\n	--x = love.window.getWidth() * 0.05, \n	x = love.window.getWidth() * 0.7, \n	y = love.window.getHeight() * 0.95\n}\n\nEventLog.priority =\n{\n	true,\n	false,\n	false,\n	false	\n}\n\n--[text, objectType, priority]\nfunction EventLog:Add(data)\n\n	self.allEvents[#self.allEvents+1] = data[1]\n\n	-- Event Log is not owned by level\n	ObjectManager.newObjectsOwnedBySave = ObjectManager.newObjectsOwnedBy\n	ObjectManager.newObjectsOwnedBy = nil\n\n	local priority = data[3] or 1\n\n	if(self.priority[priority] == false) then\n		return\n	end \n\n	if(self.eventTexts[self.eventIndex] == nil) then\n		self.eventTexts[self.eventIndex] = Text:New\n		{\n			text = data[1],\n			drawList = \"static\"\n		}\n	else\n		-- remove old text\n		ObjectManager:Destroy(self.eventTexts[self.eventIndex])\n		self.eventTexts[self.eventIndex] = nil\n		\n		-- replace the spot in table with this new text\n		self.eventTexts[self.eventIndex] = Text:New\n		{\n			text = data[1],\n			drawList = \"static\"\n		}		\n	end \n\n	-- set x\n	self.eventTexts[self.eventIndex].Pos.x = self.Pos.x\n\n	-- place new text at bottom of diplayed list\n	self.eventTexts[self.eventIndex].Pos.y = self.Pos.y - self.ySpace\n\n	-- push up all other messages\n	for i=1, #self.eventTexts do\n		repeat\n\n		-- skip the brand new text\n		if(i == self.eventIndex) then\n			break\n		end \n\n		self.eventTexts[i].Pos.y = self.eventTexts[i].Pos.y - self.ySpace\n\n		until true\n	end \n\n	self.eventIndex = self.eventIndex + 1\n\n	if(self.eventIndex > self.maxCount) then\n		self.eventIndex = 1\n	end \n\n	-- reset level ownership\n	ObjectManager.newObjectsOwnedBy = ObjectManager.newObjectsOwnedBySave\n\nend \n\n\n\nfunction EventLog:Update()\nend \n\n-- when App exits\nfunction EventLog:OnExit()\n\n	-- write all events to text file\n\n	local file = Textfile:New\n	{\n		filename = \"EventsOnExit.txt\",\n	}\n\n	for i=1, #self.allEvents do\n		file:AddLine(self.allEvents[i])\n	end \n\n	file:Save()\n	\nend \n\n\n\n\n\n-- Notes\n-------------------\n-- seems to work alright\n-- might add a panel to this object\n-- so it can be dragged around\n-- or might just go simple with a box\n\n-- may need to have table sliding function for this object\n-- so that new messages can push old ones upwards\n\n-- funnel stuff from here to printDebug so they can be\n-- sort of the same thing\n\n-- different types\n-- for now just going to do a stack of 5-10 events\n-- that it clears as it pushes them out\n\n\n\n\n-- Junk\n----------------------------------------------\n\n\n--[[\n\n\nfunction EventLog:Add2(data)\n	self.allEvents[#self.allEvents+1] = data\n\n	self.eventTexts[#self.eventTexts+1] = Text:New\n	{\n		text = data[1],\n		objectType = data[2]\n	}\n\n	self.eventTexts[#self.eventTexts].Pos.x = self.Pos.x\n	self.eventTexts[#self.eventTexts].Pos.y = self.Pos.y + (#self.eventTexts * self.ySpace)\n	self.Pos.y = self.Pos.y - self.ySpace\n\n	-- push other messages up\n	-- this is only used for nonslide mode\n	for i=1, #self.eventTexts do\n		self.eventTexts[i].Pos.y = self.eventTexts[i].Pos.y - self.ySpace\n	end \n\nend \n\n\n\n\n\n\n\n\n\n\n--]]",
			"file": "EventLog.lua",
			"file_size": 4036,
			"file_write_time": 130948602870426926,
			"settings":
			{
				"buffer_size": 3825,
				"line_ending": "Windows"
			}
		},
		{
			"file": "MapObject_Sprites.lua",
			"settings":
			{
				"buffer_size": 2990,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Level.lua",
			"settings":
			{
				"buffer_size": 1875,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Notes.lua",
			"settings":
			{
				"buffer_size": 4723,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ChatBox.lua",
			"settings":
			{
				"buffer_size": 7951,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Animation.lua",
			"settings":
			{
				"buffer_size": 6693,
				"line_ending": "Windows"
			}
		},
		{
			"file": "AnimationComponent.lua",
			"settings":
			{
				"buffer_size": 4043,
				"line_ending": "Windows"
			}
		},
		{
			"file": "MapObject.lua",
			"settings":
			{
				"buffer_size": 9420,
				"line_ending": "Windows"
			}
		},
		{
			"file": "MapObject_Action.lua",
			"settings":
			{
				"buffer_size": 11525,
				"line_ending": "Windows"
			}
		},
		{
			"file": "MapObject_Objects.lua",
			"settings":
			{
				"buffer_size": 2272,
				"line_ending": "Windows"
			}
		},
		{
			"file": "levels/MapWorldLevel.lua",
			"settings":
			{
				"buffer_size": 3562,
				"line_ending": "Windows"
			}
		},
		{
			"file": "DebugText.lua",
			"settings":
			{
				"buffer_size": 6903,
				"line_ending": "Windows"
			}
		},
		{
			"file": "PrintDebug.lua",
			"settings":
			{
				"buffer_size": 3035,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Box.lua",
			"settings":
			{
				"buffer_size": 7535,
				"line_ending": "Windows"
			}
		},
		{
			"file": "LevelManager.lua",
			"settings":
			{
				"buffer_size": 7396,
				"line_ending": "Windows"
			}
		},
		{
			"file": "levels/TestLevel.lua",
			"settings":
			{
				"buffer_size": 2896,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Window.lua",
			"settings":
			{
				"buffer_size": 2439,
				"line_ending": "Windows"
			}
		},
		{
			"file": "App.lua",
			"settings":
			{
				"buffer_size": 1340,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 148 files for \"QuitGameInput\" (case sensitive)\n\nD:\\GitRepos\\Game\\game\\App.lua:\n   32  \n   33  -- close the program\n   34: function App:QuitGameInput()\n   35  		\n   36  		love.event.quit()\n   ..\n   45  	keys = \n   46  	{ \n   47: 		{ \"escape\", \"press\", App.QuitGameInput},\n   48  	}\n   49  }\n\nD:\\GitRepos\\Game\\game\\Input.lua:\n  238  	key = \"escape\",\n  239  	type = \"press\",\n  240: 	func = App.QuitGameInput,\n  241  }\n  242  --]]\n  ...\n  246  App.Input = Input:New\n  247  {\n  248: 	{\"escape\", \"press\", App.QuitGameInput}, -- key 1\n  249  	{key, inputType, function}, -- key 2\n  250  	{..., ..., ...} -- key 3\n\nD:\\GitRepos\\Game\\game\\OldCode.lua:\n  178  ---------------------\n  179  \n  180: function App:QuitGameInput(key)\n  181  	-- exit game\n  182  	if(key == \"escape\") then\n  ...\n  187  \n  188  function App:Input(key)\n  189: 	self:QuitGameInput(key)\n  190  end \n  191  \n\n6 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 905,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "Input.lua",
			"settings":
			{
				"buffer_size": 4736,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Sprite.lua",
			"settings":
			{
				"buffer_size": 5279,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Pos.lua",
			"settings":
			{
				"buffer_size": 4026,
				"line_ending": "Windows"
			}
		},
		{
			"file": "SpriteSheet.lua",
			"settings":
			{
				"buffer_size": 2428,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ObjectManager.lua",
			"settings":
			{
				"buffer_size": 13029,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Camera.lua",
			"settings":
			{
				"buffer_size": 12853,
				"line_ending": "Windows"
			}
		},
		{
			"file": "AnimationEditor.lua",
			"settings":
			{
				"buffer_size": 4467,
				"line_ending": "Windows"
			}
		},
		{
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/LOVE.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"",
				"Build: Build"
			],
			[
				"vmen",
				"View: Toggle Menu"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Packa",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/GitRepos/Game/game/FileManager.lua",
		"/C/Users/PixelPiledriver/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/PixelPiledriver/AppData/Roaming/Sublime Text 2/Packages/User/JSON.sublime-settings",
		"/C/Users/PixelPiledriver/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/PixelPiledriver/AppData/Roaming/Sublime Text 2/Packages/User/CoronaSDKLua.sublime-settings",
		"/D/GitRepos/Game/game/main.lua",
		"/D/GitRepos/Game/game/lib1.lua",
		"/C/Users/PixelPiledriver/AppData/Roaming/LOVE/Mega Cookie/orc.txt",
		"/C/Users/PixelPiledriver/AppData/Roaming/LOVE/MetanetHunter/config.lua",
		"/D/GitRepos/Game/game/Graphics.lua",
		"/D/GitRepos/Game/game/Box.lua",
		"/D/GitRepos/Game/game/MapObject_Art.lua",
		"/D/GitRepos/Game/game/levels/AudioTestLevel.lua",
		"/D/GitRepos/Game/game/levels/PixelDrawLevel.lua",
		"/D/GitRepos/Game/game/DrawManager.lua",
		"/D/GitRepos/Game/game/Action.lua",
		"/D/GitRepos/Game/game/Animation.lua",
		"/D/GitRepos/Game/game/AnimationComponent.lua",
		"/D/GitRepos/Game/game/AnimationEditor.lua",
		"/D/GitRepos/Game/game/App.lua",
		"/D/GitRepos/Game/game/Block.lua",
		"/D/GitRepos/Game/game/Bullet.lua",
		"/D/GitRepos/Game/game/Button.lua",
		"/D/GitRepos/Game/game/Camera.lua",
		"/D/GitRepos/Game/game/CameraOld.lua",
		"/D/GitRepos/Game/game/Canvas.lua",
		"/D/GitRepos/Game/game/ChatBox.lua",
		"/D/GitRepos/Game/game/Collision.lua",
		"/D/GitRepos/Game/game/Color.lua",
		"/D/GitRepos/Game/game/Controller.lua",
		"/D/GitRepos/Game/game/DebugText.lua",
		"/D/GitRepos/Game/game/Draw.lua",
		"/D/GitRepos/Game/game/DrawGroup.lua",
		"/D/GitRepos/Game/game/DrawList.lua",
		"/D/GitRepos/Game/game/DrawList_Old.lua",
		"/D/GitRepos/Game/game/DrawTools.lua",
		"/D/GitRepos/Game/game/EventLog.lua",
		"/D/GitRepos/Game/game/Fade.lua",
		"/D/GitRepos/Game/game/Game.lua",
		"/D/GitRepos/Game/game/GameEngineProjectFile.sublime-workspace",
		"/D/GitRepos/Game/game/Health.lua",
		"/D/GitRepos/Game/game/Info.lua",
		"/D/GitRepos/Game/game/Input.lua",
		"/D/GitRepos/Game/game/InputText.lua",
		"/D/GitRepos/Game/game/Key.lua",
		"/D/GitRepos/Game/game/Keyboard.lua",
		"/D/GitRepos/Game/game/Level.lua",
		"/D/GitRepos/Game/game/LevelManager.lua",
		"/D/GitRepos/Game/game/levels/AnimationEditorLevel.lua",
		"/D/GitRepos/Game/game/levels/TestLevel.lua",
		"/D/GitRepos/Game/game/Life.lua",
		"/D/GitRepos/Game/game/Line.lua",
		"/D/GitRepos/Game/game/Link.lua",
		"/D/GitRepos/Game/game/Links.lua",
		"/D/GitRepos/Game/game/Map.lua",
		"/D/GitRepos/Game/game/MapObject.lua",
		"/D/GitRepos/Game/game/MapTable.lua",
		"/D/GitRepos/Game/game/MapWorld.lua",
		"/D/GitRepos/Game/game/Mouse.lua",
		"/D/GitRepos/Game/game/MouseDrag.lua",
		"/D/GitRepos/Game/game/MouseHover.lua",
		"/D/GitRepos/Game/game/Name.lua",
		"/D/GitRepos/Game/game/ObjectUpdater.lua",
		"/D/GitRepos/Game/game/OldCode.lua",
		"/D/GitRepos/Game/game/Palette.lua",
		"/D/GitRepos/Game/game/Panel.lua",
		"/D/GitRepos/Game/game/Particle.lua",
		"/D/GitRepos/Game/game/ParticleSystem.lua",
		"/D/GitRepos/Game/game/Pattern.lua",
		"/D/GitRepos/Game/game/PixelBrush.lua",
		"/D/GitRepos/Game/game/PixelTexture.lua",
		"/D/GitRepos/Game/game/Player.lua",
		"/D/GitRepos/Game/game/Point.lua",
		"/D/GitRepos/Game/game/Polygon.lua",
		"/D/GitRepos/Game/game/Pos.lua",
		"/D/GitRepos/Game/game/PrintDebug.lua",
		"/D/GitRepos/Game/game/Scale.lua",
		"/D/GitRepos/Game/game/Shader.lua",
		"/D/GitRepos/Game/game/Shape.lua",
		"/D/GitRepos/Game/game/SimplePanel.lua",
		"/D/GitRepos/Game/game/SinCounter.lua",
		"/D/GitRepos/Game/game/Size.lua",
		"/D/GitRepos/Game/game/SnapPlayer.lua",
		"/D/GitRepos/Game/game/Sprite.lua",
		"/D/GitRepos/Game/game/SpriteSheet.lua",
		"/D/GitRepos/Game/game/String.lua",
		"/D/GitRepos/Game/game/Text.lua",
		"/D/GitRepos/Game/game/Textfile.lua",
		"/D/GitRepos/Game/game/Timer.lua",
		"/D/GitRepos/Game/game/ValueStorage.lua",
		"/D/GitRepos/Game/game/ValueStore.lua",
		"/D/GitRepos/Game/game/Vertex.lua",
		"/D/GitRepos/Game/game/Window.lua",
		"/D/GitRepos/Game/game/BlockMap.lua",
		"/D/GitRepos/Game/game/Arrow.lua",
		"/D/GitRepos/Game/game/CollisionManager.lua",
		"/D/GitRepos/Game/game/AnimationTest.lua",
		"/D/GitRepos/Game/game/FailNew.lua",
		"/D/GitRepos/Game/game/levels/CameraLevel.lua",
		"/D/GitRepos/Game/game/mouse",
		"/D/GitRepos/Game/game/main",
		"/D/GitRepos/Game/game/Notes.lua",
		"/D/GitRepos/Game/game/Matrix.lua",
		"/D/GitRepos/Game/game/Bool.lua",
		"/D/GitRepos/Game/game/Sprites.lua",
		"/D/GitRepos/Game/game/levels/BoxLevel.lua",
		"/D/GitRepos/Game/game/Math.lua",
		"/D/GitRepos/Game/game/Sound.lua",
		"/D/GitRepos/Game/game/Camera_Node.lua",
		"/D/GitRepos/Game/game/levels/MapWorldLevel.lua",
		"/D/GitRepos/Ideas-and-Writing/Words and stuff_35.txt",
		"/D/GitRepos/Game/game/Input",
		"/D/GitRepos/Game/game/levels/LerpLevel.lua",
		"/D/GitRepos/Game/game/levels/BoxTestLevel.lua",
		"/D/GitRepos/Game/game/levels/DecrodedLerpLevel.lua",
		"/D/GitRepos/Game/game/levels/TextWriteLevel.lua",
		"/D/GitRepos/Game/game/levels/SnapGridTestLevel.lua",
		"/D/GitRepos/Game/game/SnapGrid.lua",
		"/D/GitRepos/Game/game/Box",
		"/D/GitRepos/Game/game/levels/StudyLevel.lua",
		"/D/GitRepos/Game/game/BulletTypes.lua",
		"/D/GitRepos/Game/game/MapObject_Action.lua",
		"/D/GitRepos/Game/game/levels/NewLevelTypeTest.lua",
		"/D/GitRepos/Game/game/ObjectCreator.lua",
		"/C/Users/PixelPiledriver/Desktop/why bitches hate games and stuff",
		"/D/GitRepos/Game/game/Random.lua",
		"/D/GitRepos/Game/game/TableSort.lua",
		"/D/GitRepos/Game/game/Math"
	],
	"find":
	{
		"height": 50.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"D:\\GitRepos\\Game\\game",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"tab",
			"save",
			"health",
			"speed",
			"\n",
			"data[2]",
			"data",
			"allEvent",
			" \n",
			"line",
			"QuitGameInput",
			"Parent",
			"parent",
			"currentFrame",
			"index",
			"frame",
			"startOverOnReplay",
			"loopCount",
			"parent",
			"frames",
			"loop",
			"playName",
			"reaction",
			".draw",
			"o.",
			"playName",
			"o.draw",
			"Fail",
			"FailNew",
			"print",
			"orc",
			"tree",
			"Pos:New",
			"animation",
			"xAbs",
			".spriteSheet",
			"human",
			"parent",
			"default",
			"piss",
			".default",
			"default",
			"defautl",
			"noImage",
			"Sprite",
			".x",
			"Animation",
			"Graphics",
			"true",
			".draw",
			"o.draw",
			"active",
			"o.draw",
			"active",
			"o.active",
			"ObjectUpdater",
			"Object",
			"name",
			"min",
			"Min",
			"min",
			"zoom",
			"unknown level",
			"Start Level",
			"Start level",
			"objects.name",
			"CollisionManager.names",
			"objects.names",
			"CollisionManager.names",
			".objects",
			"destroyObjects",
			"destroy",
			"destroyList",
			"destroyList'",
			"destroyList",
			"hover",
			"Destroy",
			"CollisionManager:Destroy",
			"\"white",
			"printDebug",
			"CollisionManager:PrintDebugText",
			"printDebutText",
			"destroy",
			".sprite = ",
			"Sprite",
			"Line",
			"offsets",
			"Link",
			"self.y",
			"self.x",
			"o.x",
			"o.x ",
			"o.x",
			".x",
			"Pos",
			"Link",
			"Simple",
			"Pos",
			"require(\"Link\")",
			".x",
			"collision",
			".parent",
			"Box",
			"box",
			".parent",
			"collision",
			"followParent",
			"parent",
			"Collision",
			"Camera",
			"Follow",
			".x",
			"pos",
			"Pos",
			"Object",
			".selectedCamera",
			"Start Level",
			"Start",
			"----------\n",
			"Star Level",
			"print",
			"New",
			"o:Destroy",
			"Destroy",
			"New",
			"Destroy",
			"New",
			"piss"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"self.",
			"default.",
			"ObjectManager",
			"self.Pos.y",
			"self.Pos.x",
			".selectedCameraIndex",
			"Pos.",
			"o.",
			"o:",
			"o.",
			"o:",
			"o.",
			"o:",
			"o",
			"o.",
			"o:",
			"o",
			"o:",
			"o.",
			"o",
			"o:",
			"o.",
			"o",
			"o.",
			"o:",
			"o",
			"tempText",
			"self.slideBoxIndex",
			"self.slideBox[slideBoxIndex].",
			"self.",
			"object.",
			"Monday ",
			"Friday",
			"Wednesday ",
			"Teusday ",
			"Monday ",
			"Saturday ",
			"Saturday",
			"Friday ",
			"Thursday ",
			"Thursday",
			"object.",
			".Objects",
			"object.",
			"o.",
			"self.parent.",
			"self.parent",
			"self.parenttnt.",
			"self.parentnt.",
			"printList",
			"self.direction",
			"self.active",
			"MapWorldLevel",
			"dkfj",
			"group",
			"timer",
			"self.isHovering",
			"self.text",
			"o.text",
			"title",
			"DrawToolsUI",
			".barCollision",
			".bar",
			".frame",
			".items",
			"self.items",
			"o.items",
			"o:",
			"o.",
			"StudyLevel",
			"object.Info.name",
			"o.",
			"o",
			"objectType",
			"stuff",
			"Draw",
			"layer = \"Hud\"",
			"layer = \"Objects\"",
			"LayerIndex",
			"layerIndex",
			"self.objects.depthIndex",
			"Keyboard.allKeys",
			"the guy",
			"The guy",
			".Size.height",
			".Size.width",
			"LinkPosTo",
			"MouseDrag",
			"MouseHover",
			"followPos",
			"Damage",
			".Pos.y",
			".Pos.x",
			"self.Pos.y",
			"self.Pos.x",
			"o.Size.height",
			"o.Size.width",
			"Panel.objectToPanelPad",
			"self.Pos.x,",
			"self.Pos.x ",
			"self.Pos.y ",
			"self.Pos.x",
			"self.Size.height",
			"self.Size.width",
			"RefreshTexture",
			"DrawToolsHUD.",
			"DrawToolsHUD.iconSheet",
			"DrawToolsHUD.",
			".tools",
			"self.Pos.y",
			"self.Pos.x",
			"o",
			"monkey",
			"o",
			"otype",
			"Pos",
			"o",
			"o:",
			"o.",
			"o",
			"rot",
			"Polygon",
			"self.colors",
			"= 1",
			"rotDirection.angle",
			"{",
			", 255}",
			"type"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "levels/TextWriteLevel.lua",
					"settings":
					{
						"buffer_size": 4609,
						"regions":
						{
						},
						"selection":
						[
							[
								1480,
								1480
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3069.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Bool.lua",
					"settings":
					{
						"buffer_size": 1165,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 297.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Textfile.lua",
					"settings":
					{
						"buffer_size": 4735,
						"regions":
						{
						},
						"selection":
						[
							[
								656,
								656
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1089.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "main.lua",
					"settings":
					{
						"buffer_size": 3759,
						"regions":
						{
						},
						"selection":
						[
							[
								1528,
								1543
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4059.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Text.lua",
					"settings":
					{
						"buffer_size": 8767,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4257.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "FileManager.lua",
					"settings":
					{
						"buffer_size": 3455,
						"regions":
						{
						},
						"selection":
						[
							[
								1030,
								1030
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"auto_name": "-- FileManager.lua",
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1089.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "EventLog.lua",
					"settings":
					{
						"buffer_size": 3825,
						"regions":
						{
						},
						"selection":
						[
							[
								2091,
								2091
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3267.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "MapObject_Sprites.lua",
					"settings":
					{
						"buffer_size": 2990,
						"regions":
						{
						},
						"selection":
						[
							[
								615,
								615
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 396.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Level.lua",
					"settings":
					{
						"buffer_size": 1875,
						"regions":
						{
						},
						"selection":
						[
							[
								1456,
								1456
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "Notes.lua",
					"settings":
					{
						"buffer_size": 4723,
						"regions":
						{
						},
						"selection":
						[
							[
								523,
								523
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "ChatBox.lua",
					"settings":
					{
						"buffer_size": 7951,
						"regions":
						{
						},
						"selection":
						[
							[
								4611,
								4611
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7393.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "Animation.lua",
					"settings":
					{
						"buffer_size": 6693,
						"regions":
						{
						},
						"selection":
						[
							[
								2454,
								2454
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3528.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "AnimationComponent.lua",
					"settings":
					{
						"buffer_size": 4043,
						"regions":
						{
						},
						"selection":
						[
							[
								3199,
								3199
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2604.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "MapObject.lua",
					"settings":
					{
						"buffer_size": 9420,
						"regions":
						{
						},
						"selection":
						[
							[
								4929,
								4929
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8611.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "MapObject_Action.lua",
					"settings":
					{
						"buffer_size": 11525,
						"regions":
						{
						},
						"selection":
						[
							[
								2155,
								2155
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2079.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "MapObject_Objects.lua",
					"settings":
					{
						"buffer_size": 2272,
						"regions":
						{
						},
						"selection":
						[
							[
								1925,
								1925
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2673.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "levels/MapWorldLevel.lua",
					"settings":
					{
						"buffer_size": 3562,
						"regions":
						{
						},
						"selection":
						[
							[
								1665,
								1665
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1945.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "DebugText.lua",
					"settings":
					{
						"buffer_size": 6903,
						"regions":
						{
						},
						"selection":
						[
							[
								1847,
								1847
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3072.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "PrintDebug.lua",
					"settings":
					{
						"buffer_size": 3035,
						"regions":
						{
						},
						"selection":
						[
							[
								1461,
								1461
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1347.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "Box.lua",
					"settings":
					{
						"buffer_size": 7535,
						"regions":
						{
						},
						"selection":
						[
							[
								497,
								647
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 594.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "LevelManager.lua",
					"settings":
					{
						"buffer_size": 7396,
						"regions":
						{
						},
						"selection":
						[
							[
								339,
								322
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5596.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "levels/TestLevel.lua",
					"settings":
					{
						"buffer_size": 2896,
						"regions":
						{
						},
						"selection":
						[
							[
								1585,
								1585
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2673.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "Window.lua",
					"settings":
					{
						"buffer_size": 2439,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 990.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "App.lua",
					"settings":
					{
						"buffer_size": 1340,
						"regions":
						{
						},
						"selection":
						[
							[
								635,
								635
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1485.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 24,
					"settings":
					{
						"buffer_size": 905,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										145,
										158
									],
									[
										265,
										278
									],
									[
										401,
										414
									],
									[
										513,
										526
									],
									[
										709,
										722
									],
									[
										840,
										853
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								442,
								442
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 396.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "Input.lua",
					"settings":
					{
						"buffer_size": 4736,
						"regions":
						{
						},
						"selection":
						[
							[
								4337,
								4337
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7958.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "Sprite.lua",
					"settings":
					{
						"buffer_size": 5279,
						"regions":
						{
						},
						"selection":
						[
							[
								1202,
								1202
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1898.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "Pos.lua",
					"settings":
					{
						"buffer_size": 4026,
						"regions":
						{
						},
						"selection":
						[
							[
								363,
								363
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 480.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "SpriteSheet.lua",
					"settings":
					{
						"buffer_size": 2428,
						"regions":
						{
						},
						"selection":
						[
							[
								672,
								620
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 735.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "ObjectManager.lua",
					"settings":
					{
						"buffer_size": 13029,
						"regions":
						{
						},
						"selection":
						[
							[
								11065,
								11065
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 16674.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "Camera.lua",
					"settings":
					{
						"buffer_size": 12853,
						"regions":
						{
						},
						"selection":
						[
							[
								1615,
								1615
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2688.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "AnimationEditor.lua",
					"settings":
					{
						"buffer_size": 4467,
						"regions":
						{
						},
						"selection":
						[
							[
								926,
								926
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Corona Editor/CoronaSDKLua.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 768.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 32,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 158.0
	},
	"replace":
	{
		"height": 108.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"/D/CoronaTestCode/Display Stuff 1/main.lua"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 205.0,
	"status_bar_visible": false
}
