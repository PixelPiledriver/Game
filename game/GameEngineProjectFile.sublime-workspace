{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"drawn",
				"drawnThisFrame"
			],
			[
				"Post",
				"PostUpdate"
			],
			[
				"post",
				"postUpdateObjects"
			],
			[
				"in",
				"inGroup"
			],
			[
				"Comp",
				"CompressAndSortLayerList"
			],
			[
				"layer",
				"layerIndex"
			],
			[
				"defaul",
				"defaultDraw"
			],
			[
				"use",
				"useExternalDrawCall"
			],
			[
				"Draw",
				"DrawList"
			],
			[
				"Dra",
				"DrawList"
			],
			[
				"depthIn",
				"depthIndex"
			],
			[
				"depth",
				"depthIndex"
			],
			[
				"depthInx",
				"depthIndexString"
			],
			[
				"dept",
				"depthIndex"
			],
			[
				"Scrolldow",
				"ScrollDownSubMessages"
			],
			[
				"Sub",
				"ScrollUpSubMessages"
			],
			[
				"Add",
				"AddToText"
			],
			[
				"keys",
				"keysToAdd"
			],
			[
				"key",
				"keysToAdd"
			],
			[
				"Shake",
				"ShakeSoft"
			],
			[
				"Rot",
				"RotLeft"
			],
			[
				"Zoom",
				"ZoomIn"
			],
			[
				"hold",
				"holdKeys"
			],
			[
				"input",
				"inputType"
			],
			[
				"press",
				"pressKeys"
			],
			[
				"Object",
				"ObjectUpdater"
			],
			[
				"Objec",
				"ObjectUpdater"
			],
			[
				"Get",
				"GetX"
			],
			[
				"Coru",
				"Corutines"
			],
			[
				"all",
				"allKeysPressed"
			],
			[
				"any",
				"anyKey"
			],
			[
				"line",
				"lineIndex"
			],
			[
				"lin",
				"lineIndex"
			],
			[
				"message",
				"messageIndex"
			],
			[
				"mess",
				"messageIndex"
			],
			[
				"wheel",
				"wheelDown"
			],
			[
				"lastwheel",
				"lastWheelDown"
			],
			[
				"last",
				"lastWheelUp"
			],
			[
				"lastwhee",
				"lastWheelDown"
			],
			[
				"wheeldo",
				"wheelDownSkip"
			],
			[
				"whe",
				"wheelUpSkip"
			],
			[
				"lastWh",
				"lastWheelUpCheck"
			],
			[
				"w",
				"wheelUp"
			],
			[
				"wh",
				"wheelDown"
			],
			[
				"click",
				"clickButton"
			],
			[
				"dr",
				"draggingObjects"
			],
			[
				"Key",
				"Keyboard"
			],
			[
				"Ke",
				"Keyboard"
			],
			[
				"grid",
				"gridPad"
			],
			[
				"hei",
				"height"
			],
			[
				"widt",
				"width"
			],
			[
				"colli",
				"collision"
			],
			[
				"top",
				"topFrame"
			],
			[
				"objectto",
				"objectToPanelPad"
			],
			[
				"width",
				"widthOffset"
			],
			[
				"heig",
				"heightOffset"
			],
			[
				"link",
				"linkWidth"
			],
			[
				"gri",
				"gridScale"
			],
			[
				"printD",
				"printDebugTextActive"
			],
			[
				"MapTa",
				"MapTable:New"
			],
			[
				"grow",
				"growMap"
			],
			[
				"gro",
				"growMap"
			],
			[
				"mapt",
				"maptable"
			],
			[
				"map",
				"mapAsString"
			],
			[
				"panel",
				"panelType"
			],
			[
				"follow",
				"followParent"
			],
			[
				"mouse",
				"mouseButton"
			],
			[
				"foll",
				"followPos"
			],
			[
				"hover",
				"hoverType"
			],
			[
				"collision",
				"collisionList"
			],
			[
				"collsion",
				"collisionList"
			],
			[
				"off",
				"offsetFromMouseY"
			],
			[
				"offset",
				"offsetFromMouseX"
			],
			[
				"colors",
				"colorsList"
			],
			[
				"Toggle",
				"ToggleDraw"
			],
			[
				"draw",
				"drawText"
			],
			[
				"topF",
				"topFrame"
			],
			[
				"def",
				"defaultTopFrame"
			],
			[
				"df",
				"defaultFrameColor"
			],
			[
				"totalObje",
				"totalObjectPadWidth"
			],
			[
				"object",
				"objectToPanelPad"
			],
			[
				"objec",
				"objectToObjectPad"
			],
			[
				"windo",
				"windowBorderSpace"
			],
			[
				"pawn",
				"pawnSheet"
			],
			[
				"spr",
				"sprites"
			],
			[
				"default",
				"defaultPath"
			],
			[
				"selec",
				"selectedPixelTexture"
			],
			[
				"sele",
				"selectedPixelTexture"
			],
			[
				"defau",
				"defaultCreated"
			],
			[
				"active",
				"activeTools"
			],
			[
				"sel",
				"selectedTool"
			],
			[
				"print",
				"printDebugTextActive"
			],
			[
				"toggle",
				"toggleState"
			],
			[
				"sprite",
				"spriteSheet"
			],
			[
				"Sprite",
				"SpriteSheet:New"
			],
			[
				"x",
				"lastX"
			],
			[
				"max",
				"maxColumns"
			],
			[
				"self.sele",
				"self.selectedPixelTexture"
			],
			[
				"self.sle",
				"self.selectedColor"
			],
			[
				"act",
				"activeDefault"
			],
			[
				"b.func",
				"b.funcObjectIndex"
			],
			[
				"b.fun",
				"b.funcObjectIndex"
			],
			[
				"Pixel",
				"PixelGenFunctions"
			],
			[
				"objectType",
				"objectTypesTemp"
			],
			[
				"total",
				"totalsTextTable"
			],
			[
				"objectT",
				"objectTypesTemp"
			],
			[
				"SortB",
				"SortByFunc"
			],
			[
				"Table",
				"TableSort:Sort"
			],
			[
				"pal",
				"pal2"
			],
			[
				"re",
				"require()	package"
			],
			[
				"rqu",
				"require()	package"
			],
			[
				"Ob",
				"ObjectUpdater"
			],
			[
				"requi",
				"require()	package"
			],
			[
				"Oj",
				"ObjectUpdater"
			],
			[
				"OBjec",
				"ObjectUpdater"
			],
			[
				"Debu",
				"DebugText"
			],
			[
				"Obec",
				"ObjectUpdater"
			],
			[
				"ObjectU",
				"ObjectUpdater.name"
			],
			[
				"Obj",
				"ObjectUpdater"
			],
			[
				"love.file",
				"love.filesystem.read"
			],
			[
				"Text",
				"Textfile:New"
			],
			[
				"requ",
				"require()	package"
			],
			[
				"self.last",
				"self.lastTime"
			],
			[
				"rotVel",
				"rotVelocityScale"
			],
			[
				"Pixe",
				"PixelBrush.x2"
			],
			[
				"PixelBrush",
				"PixelBrush.x1"
			],
			[
				"XS",
				"XScroll"
			],
			[
				"object.Line",
				"object.LineValues"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 116 files for \"stuff\" (case sensitive)\n\nD:\\GitRepos\\Game\\game\\App.lua:\n   45  -- Notes\n   46  --------------------\n   47: -- gonna test the new input component on this stuff\n   48  -- Cool, the new input system works\n   49  \n   ..\n   99  -- Notes\n  100  --------------------\n  101: --gonna test the new input component on this stuff\n  102  \n  103  --]]\n\nD:\\GitRepos\\Game\\game\\Camera.lua:\n  111  \n  112  	-- manually control the camera\n  113: 	-- test bullstuff\n  114  	function o:RepeatedInput()\n  115  		-- move\n  ...\n  513  \n  514  -- manually control the camera\n  515: -- test bullstuff\n  516  function Camera:RepeatedInput()\n  517  \n\nD:\\GitRepos\\Game\\game\\Collision.lua:\n    1  -- Collision\n    2: -- does stuff and checks if stuff is hitting stuff\n    3  \n    4  \n\nD:\\GitRepos\\Game\\game\\CollisionManager.lua:\n  384  \n  385  -- leave out for now\n  386: -- cannot put a manager in a manager or some stuff\n  387  --ObjectUpdater:AddStatic(CollisionManager)\n  388  \n\nD:\\GitRepos\\Game\\game\\DebugText.lua:\n  318  	-- need to be able to scroll thru each line of text of a single printed object\n  319  	-- add an alternate way to control it\n  320: 	-- eventually add debug hud for this stuff like some buttons and a panel :P\n  321  \n  322  -- NEED\n\nD:\\GitRepos\\Game\\game\\Draw.lua:\n  208  -- draw function is not defined as part of component\n  209  -- pass the draw function of an object to this and it will run it for it\n  210: -- the reason we need this is to handle stuff like DrawList:Submit and stuff\n  211  -- so it doesnt need to be typed in all over the place\n  212  \n\nD:\\GitRepos\\Game\\game\\DrawGroup.lua:\n    8  -- But draws all of the objects within the group as if it were its own layer\n    9  \n   10: -- Useful for windows and characters with parts and stuff like that\n   11  \n   12  \n\nD:\\GitRepos\\Game\\game\\DrawList.lua:\n  295  -- WORKS - but is annoying to add a submit function to each object\n  296  -- not that big of a deal I guess\n  297: -- might create a draw component to handle stuff like that\n  298  -- but most draw funcitions are fairly different\n  299  -- so maybe I wont make a universal component for that\n\nD:\\GitRepos\\Game\\game\\DrawTools.lua:\n   35  \n   36  -- displays the current selected color\n   37: -- gonna ignore this stuff for a min\n   38  DrawTools.selectedColorBox = Box:New\n   39  {\n   ..\n  245  \n  246  -- * improved quite a bit from the super basic setup*\n  247: -- super basic stuff right now\n  248  -- not special or great at all\n  249  -- but it works\n  250: -- organization is pretty stuffty right now\n\nD:\\GitRepos\\Game\\game\\Game.lua:\n    1  -- Game\n    2: -- stuff about the game\n    3  \n    4  \n    .\n   15  \n   16  \n   17: -- CollisionLists.lua kinda replaces this stuff\n   18  -- hrmmmmmmmm :L --> Depricate???\n   19  Game.playersInPlay = {\"redRobot\", \"blueRobot\"}\n\nD:\\GitRepos\\Game\\game\\GameEngineProjectFile.sublime-workspace:\n  925  			\"local ObjectUpdater\",\n  926  			\"local ObjectUpdater =\",\n  927: 			\"stuff\",\n  928  			\"DebugText:PrintDebugText()\",\n  929  			\":PrintDebugText()\",\n\nD:\\GitRepos\\Game\\game\\Graphics.lua:\n    1  -- Graphics.lua\n    2: -- sets up window and other graphics stuff\n    3  -- this is just a temp file until \n    4  -- I break the features down into other components\n\nD:\\GitRepos\\Game\\game\\Guns.lua:\n  119  ----------------\n  120  \n  121: -- oh stuff bro :O\n  122  -- there is only one instance of each gun, both players cant shoot at the same time\n  123  -- need to hand out copies to players\n\nD:\\GitRepos\\Game\\game\\Input.lua:\n  230  				print(\"press\")\n  231  				if(self.pressKeys[key]) then\n  232: 					print(\"press this stuff\")\n  233  					self.pressKeys[key].func()\n  234  				end \n  ...\n  239  				\n  240  				if(self.releaseKeys[key]) then\n  241: 					print(\"release this stuff\")\n  242  					self.releaseKeys[key].func()\n  243  				end \n  ...\n  246  			if(inputType == \"hold\") then\n  247  				if(self.holdKeys[key]) then\n  248: 					print(\"hold this stuff\")\n  249  					self.holdKeys[key].func()\n  250  				end \n\nD:\\GitRepos\\Game\\game\\Keyboard.lua:\n  142  \n  143  -- is a key pressed? --> only one input\n  144: -- this funciton is bullstuff\n  145  -- it doesnt work this way at all\n  146  function Keyboard:KeyPress(k)\n  ...\n  246  \n  247  \n  248: -- old code stuff\n  249  --[===[\n  250  \n\nD:\\GitRepos\\Game\\game\\Levels\\AudioTestLevel.lua:\n    1  --******************************************************************--\n    2  -- AudioTestLevel.lua\n    3: -- A place for storing my stuffty Love2D audio test code\n    4  -- writen by Adam Balk, September 2014\n    5  --******************************************************************--\n    .\n    7  \n    8  -- NOTE: Adam, you need to change these sounds to use Clone() \n    9: --       instead of creating new ones. C'mon man. Get your stuff together.\n   10  \n   11  -- audio testing\n\nD:\\GitRepos\\Game\\game\\Levels\\PixelDrawLevel.lua:\n   26  local DrawGroup = require(\"DrawGroup\")\n   27  \n   28: -- test stuff code and stuff\n   29  \n   30  \n   ..\n  390  \n  391  \n  392: -- old test stuff\n  393  --[[\n  394  \n\nD:\\GitRepos\\Game\\game\\Link.lua:\n   42  \n   43  			-- this is poorly written\n   44: 			-- re write this stuff please :P\n   45  			if(self.aComp and self.bComp == nil) then\n   46  				self.a[self.aComp][self.aVar] = self.b[self.bVar]\n   ..\n   97  \n   98  \n   99: -- this stuff works now\n  100  -- use this to fix problems I was having with building panels and stuff\n  101  \n  ...\n  110  \n  111  -- old structure\n  112: -- re writing all this stuff :P\n  113  --------------------------------------\n  114  \n\nD:\\GitRepos\\Game\\game\\main.lua:\n    1: -- Requires --> load and run stuff in other files\n    2  \n    3  --Utility requires\n\nD:\\GitRepos\\Game\\game\\Mouse.lua:\n    1  -- Mouse.lua\n    2: -- stuff about the mouse and stuff\n    3  \n    4  \n\nD:\\GitRepos\\Game\\game\\Notes.lua:\n    1  -- Notes.lua\n    2  \n    3: -- track stuff that needs to be coded in the future\n    4: -- gonna put new stuff at the top and push old stuff down\n    5  \n    6  \n\nD:\\GitRepos\\Game\\game\\OldCode.lua:\n   57  \n   58  \n   59: -- some draw stuff\n   60  ---------------------------------------\n   61  pix:Box\n\nD:\\GitRepos\\Game\\game\\Particle.lua:\n    1  -- Particle\n    2: -- basic stuff for explosions\n    3  -- KERPOW\n    4  \n    .\n  679  \n  680  \n  681: -- this whole list of stuff might become void\n  682  -- if Value.lua works correctly\n  683  -- all possible arguments\n  ...\n  708  -- BUG\n  709  -- apparently particles are broken\n  710: -- need to fix that stuff\n  711  -- wtf\n  712  \n\nD:\\GitRepos\\Game\\game\\ParticleSystem.lua:\n    1  -- shoots out particles\n    2: -- omg son that stuff is crazy\n    3  \n    4  local Particle = require(\"Particle\")\n    .\n  241  -- BUG\n  242  -- apparently particles are broken\n  243: -- need to fix that stuff\n  244  -- wtf\n\nD:\\GitRepos\\Game\\game\\PixelTexture.lua:\n   38  -------------------------------\n   39  \n   40: -- wtf is this stuff?\n   41  -- doesnt seem like I need this?\n   42  -- if anything this should be moved over to PixelTexture.lua\n   ..\n  188  	function o:LoadFromSpriteSheet(data)\n  189  \n  190: 		--> fix this stuff its not working correctly :P\n  191  		--self.image = data.sprite.image:getDsata()\n  192  		self.image = data.spriteSheet.imageData\n  ...\n  838  -- mix colors on set pixel\n  839  ---------------------------------------------\n  840: -- lower alpha overwrites pixels instead of blending with them, fix that stuff\n  841  \n  842  \n\nD:\\GitRepos\\Game\\game\\Player.lua:\n  256  \n  257  		-- what type of graphic does the o have\n  258: 		-- this is bullstuff and needs to be re worked\n  259  		if(self.frame) then\n  260  			self.skin.idle:Draw(self)\n  ...\n  524  -- Notes\n  525  --------------\n  526: -- pull out all the controller bullstuff and move to its own component\n  527  \n  528  \n\nD:\\GitRepos\\Game\\game\\Pos.lua:\n  186  -- TO DO\n  187  -- move functions\n  188: -- pretty basic stuff\n  189  \n  190  -- DONE --> as the Link type of object\n\nD:\\GitRepos\\Game\\game\\Shader.lua:\n    2  \n    3  -- no idea how to do shaders in love 2d\n    4: -- so lets figure this stuff out\n    5  \n    6  -- play with canvases tomorrow too and get a basic full screen shader going\n\nD:\\GitRepos\\Game\\game\\SnapPlayer.lua:\n  239  	function object:Draw()\n  240  		-- what type of graphic does the object have\n  241: 		-- this is bullstuff and needs to be re worked\n  242  		if(self.frame) then\n  243  			self.skin.idle:Draw(self)\n\nD:\\GitRepos\\Game\\game\\Sprites.lua:\n    1  -- Sprites.lua\n    2  -- load sprites here\n    3: -- just messy stuff for now\n    4  -- no biggie\n    5  -- need to clean this garbage up at some point\n    .\n   19  \n   20  ---------------------------------------------\n   21: --New stuff\n   22  ---------------------------------------------\n   23  \n   ..\n  243  -------------------------------\n  244  --[[\n  245: -- need to integrate the stuff I made in Corona into this\n  246  \n  247  \n\n53 matches across 30 files\n\n\nSearching 116 files for \"Shit\" (case sensitive)\n\nD:\\GitRepos\\Game\\game\\GameEngineProjectFile.sublime-workspace:\n  805  		\"/D/GitRepos/Game/game/Textfile.lua\",\n  806  		\"/D/GitRepos/Game/game/Text.lua\",\n  807: 		\"/D/GitRepos/Game/game/TestShit.lua\",\n  808  		\"/D/GitRepos/Game/game/TestLevel.lua\",\n  809  		\"/D/GitRepos/Game/game/SpriteSheet.lua\",\n\nD:\\GitRepos\\Game\\game\\PixelTexture.lua:\n  749  \n  750  -----------------------\n  751: -- Test Shit\n  752  ----------------------\n  753  \n\n2 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 9362,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "Packages/User/LOVE.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"",
				"Build: Build"
			],
			[
				"vmen",
				"View: Toggle Menu"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Packa",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/GitRepos/Game/game/main.lua",
		"/D/GitRepos/Game/game/TestCode.lua",
		"/D/GitRepos/Game/game/Window.lua",
		"/D/GitRepos/Game/game/Code Tags and Tools.lua",
		"/D/GitRepos/Game/game/Box.lua",
		"/D/GitRepos/Game/game/Button.lua",
		"/D/GitRepos/Game/game/Group.lua",
		"/D/GitRepos/Game/game/PrintDebug.lua",
		"/D/GitRepos/Game/game/DrawList.lua",
		"/D/GitRepos/Game/game/MapTable.lua",
		"/D/GitRepos/Game/game/Controller.lua",
		"/D/GitRepos/Game/game/RNG.lua",
		"/D/GitRepos/Game/game/Palette.lua",
		"/D/GitRepos/Game/game/Health.lua",
		"/D/GitRepos/Game/game/Textfile.lua",
		"/D/GitRepos/Game/game/Levels/TextWriteLevel.lua",
		"/D/GitRepos/Game/game/Value.lua",
		"/D/GitRepos/Game/game/Camera.lua",
		"/D/GitRepos/Game/game/Sprite.lua",
		"/D/GitRepos/Game/game/Panel.lua",
		"/D/GitRepos/Game/game/Animation.lua",
		"/D/GitRepos/Game/game/Collision.lua",
		"/D/GitRepos/Game/game/PixelTexture.lua",
		"/D/GitRepos/Game/game/Input.lua",
		"/D/GitRepos/Game/game/InputList.lua",
		"/D/GitRepos/Game/game/DebugText.lua",
		"/D/GitRepos/Game/game/TableSort.lua",
		"/D/GitRepos/Game/game/OldCode.lua",
		"/D/GitRepos/Game/game/Draw.lua",
		"/D/GitRepos/Game/game/DrawGroup.lua",
		"/D/GitRepos/Game/game/ObjectUpdater.lua",
		"/D/GitRepos/Game/game/Levels/PixelDrawLevel.lua",
		"/D/GitRepos/Game/game/ObjectCreator.lua",
		"/D/GitRepos/Game/design/Command Gameplay/CommandGame_1.txt",
		"/D/GitRepos/Game/backup/DrawList_1.lua",
		"/D/GitRepos/Game/backup/DrawList_1",
		"/D/GitRepos/Game/game/BlockMap.lua",
		"/D/GitRepos/Game/game/Notes.lua",
		"/D/GitRepos/Game/game/DrawTools.lua",
		"/D/GitRepos/Game/game/Levels/BoxLevel.lua",
		"/D/GitRepos/Game/game/Levels/DecrodedLerpLevel.lua",
		"/D/GitRepos/Game/game/Mouse.lua",
		"/D/GitRepos/Game/game/Color.lua",
		"/D/GitRepos/Game/game/Particle.lua",
		"/D/GitRepos/Game/game/Levels/TestLevel.lua",
		"/D/GitRepos/Game/game/ParticleSystem.lua",
		"/D/GitRepos/Game/game/Pos.lua",
		"/D/GitRepos/Game/game/LevelManager.lua",
		"/D/GitRepos/Game/game/AnimationTest.lua",
		"/D/GitRepos/Game/game/CollisionManager.lua",
		"/D/GitRepos/Game/game/SimplePanel.lua",
		"/D/GitRepos/Game/game/Point.lua",
		"/D/GitRepos/Game/game/Player.lua",
		"/D/GitRepos/Game/game/Line.lua",
		"/C/Users/PixelPiledriver/AppData/Roaming/Sublime Text 2/Packages/User/LOVE.sublime-build",
		"/D/Sublime Projects/gameEngineProject.sublime-project",
		"/D/GitRepos/Game/game/Link.lua",
		"/D/GitRepos/Game/game/App.lua",
		"/D/GitRepos/Game/game/Levels/SnapGridTestLevel.lua",
		"/D/GitRepos/Game/game/Levels/LerpLevel.lua",
		"/D/GitRepos/Game/game/Levels/BoxTestLevel.lua",
		"/D/GitRepos/Game/game/Levels/AudioTestLevel.lua",
		"/D/GitRepos/Game/game/MouseHover.lua",
		"/D/GitRepos/Game/game/MouseDrag.lua",
		"/D/GitRepos/Game/game/Math.lua",
		"/D/GitRepos/Game/game/Map.lua",
		"/D/GitRepos/Game/game/Life.lua",
		"/D/GitRepos/Game/game/Keyboard.lua",
		"/D/GitRepos/Game/game/Key.lua",
		"/D/GitRepos/Game/game/InputText.lua",
		"/D/GitRepos/Game/game/Guns.lua",
		"/D/GitRepos/Game/game/Graphics.lua",
		"/D/GitRepos/Game/game/Game.lua",
		"/D/GitRepos/Game/game/FrameCounter.lua",
		"/D/GitRepos/Game/game/FailNew.lua",
		"/D/GitRepos/Game/game/Fade.lua",
		"/D/GitRepos/Game/game/DrawToolsHUD.lua",
		"/D/GitRepos/Game/game/DragWithMouse.lua",
		"/D/GitRepos/Game/game/DeltaTime.lua",
		"/D/GitRepos/Game/game/DataPass.lua",
		"/D/GitRepos/Game/game/Console.lua",
		"/D/GitRepos/Game/game/Components.lua",
		"/D/GitRepos/Game/game/ComponentManager.lua",
		"/D/GitRepos/Game/game/ColorPicker.lua",
		"/D/GitRepos/Game/game/CollisionLists.lua",
		"/D/GitRepos/Game/game/Canvas.lua",
		"/D/GitRepos/Game/game/BulletTypes.lua",
		"/D/GitRepos/Game/game/Bullet.lua",
		"/D/GitRepos/Game/game/Bool.lua",
		"/D/GitRepos/Game/game/Block.lua",
		"/D/GitRepos/Game/game/WindowMessages.lua",
		"/D/GitRepos/Game/game/Timer.lua",
		"/D/GitRepos/Game/game/Text.lua",
		"/D/GitRepos/Game/game/TestShit.lua",
		"/D/GitRepos/Game/game/TestLevel.lua",
		"/D/GitRepos/Game/game/SpriteSheet.lua",
		"/D/GitRepos/Game/game/Sprites.lua",
		"/D/GitRepos/Game/game/Sound.lua",
		"/D/GitRepos/Game/game/SnapPlayer.lua",
		"/D/GitRepos/Game/game/SnapGrid.lua",
		"/D/GitRepos/Game/game/Size.lua",
		"/D/GitRepos/Game/game/SinCounter.lua",
		"/D/GitRepos/Game/game/Shape.lua",
		"/D/GitRepos/Game/game/Shader.lua",
		"/D/GitRepos/Game/game/Scale.lua",
		"/D/GitRepos/Game/game/Random.lua",
		"/D/GitRepos/Game/game/Polygon.lua",
		"/D/GitRepos/Game/game/PlayerSkins.lua",
		"/D/GitRepos/Game/game/PixelGenFunctions.lua",
		"/D/GitRepos/Game/game/PixelGenerators.lua",
		"/D/GitRepos/Game/game/PixelBrush.lua",
		"/D/GitRepos/Game/game/box",
		"/D/GitRepos/Game/game/Levels/Box2.lua",
		"/D/GitRepos/Ideas-and-Writing/Words and stuff_31.txt",
		"/D/GitRepos/Ideas-and-Writing/SparkleDawg_ep1_2.txt",
		"/D/Love test code/hello world/main.lua",
		"/D/Love test code/Coroutines/main.lua",
		"/G/pixel piledriver/Resume/My Life and Carrer in a list.txt",
		"/G/pixel piledriver/Jobs/Pixelation Portfolio Page_2.txt",
		"/G/pixel piledriver/Jobs/Cool Fighting Game/Fighting Game Notes.txt",
		"/G/pixel piledriver/Jobs/Aeon Sands/Special effects list.txt",
		"/G/pixel piledriver/Pixelation/Messages/Fighting Game Guy_2.txt",
		"/G/pixel piledriver/Pixelation/Messages/Fighting Game Guy_1.txt",
		"/G/pixel piledriver/Jobs/money wise.txt",
		"/D/GitRepos/Game/game/Button",
		"/D/GitRepos/Game/design/Build and Blast.txt",
		"/D/GitRepos/Game/game/keyboard",
		"/G/pixel piledriver/Jobs/FatRascal/Poker Heros/Poker Heroes post Interview Ideas"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			"D:\\GitRepos\\Game\\game",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Shit",
			"stuff",
			"Shit",
			"stuff",
			"fuck",
			"fucj",
			"print",
			"print(",
			"print",
			"Test Code",
			"finished",
			"fuck",
			"--",
			"fuck",
			"nigga",
			"ClearPostUpdate",
			"print(\"group\")",
			"Box",
			"submit",
			"\"submit\"",
			"submit\"",
			"submit",
			"mouse",
			"Mouse",
			"depth",
			"Draw",
			"depth = \"",
			"depth = \"Hud\"",
			"depth = \"Objects\"",
			"Draw",
			"depth =",
			"Draw:New",
			"Draw",
			"local Mouse = require(\"Mouse\")",
			"alphaStart",
			"CreateParticleFromTable",
			"Draw:New",
			".layer",
			"CreateDepth",
			"DepthIndex",
			"depthIndex",
			"Draw",
			"AsTable",
			"colors",
			"Color:Get(\"red\")",
			"Color:GetColor(\"red\")",
			"red",
			"o.color",
			"pawnGraphics",
			"Animation",
			"DrawCall",
			"Draw",
			"DrawCall",
			".Draw",
			"Compo",
			"false",
			"until",
			"--",
			"until",
			"while",
			"Compo",
			"Compon",
			"function o:Draw()",
			"Draw()",
			"depth",
			"Draw:Draw",
			"FrameCount",
			"1",
			".loops",
			"Clear()",
			"()\n",
			"Submit",
			"		\n",
			"print",
			"self.objects.index",
			"local ObjectUpdater",
			"local ObjectUpdater =",
			"stuff",
			"DebugText:PrintDebugText()",
			":PrintDebugText()",
			"ScrollMessagesControl",
			"print",
			"back",
			"break",
			"continue",
			"self.rot",
			"Input",
			".keys",
			"Input",
			"input",
			"print",
			"then",
			"Camera.keys",
			"Static",
			"mainCamera",
			"Input",
			"Repeated",
			"Input",
			":RepeatedInput",
			"Input:New",
			"RepeatedInput",
			":Input",
			"InputUpdate",
			"function o:Input",
			"allKeys",
			"Object",
			"Destroy",
			"destroy",
			"print",
			"Box:New",
			"\"red\"",
			"red",
			"Color:Get(\"red\")",
			"Box:New",
			"visible",
			"show",
			"billy",
			"\n			",
			"self.x",
			".x",
			"print",
			"the man",
			"The man",
			"function print",
			"mouse",
			"Mouse",
			"print",
			"Link"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Draw",
			"layer = \"Hud\"",
			"layer = \"Objects\"",
			"LayerIndex",
			"layerIndex",
			"self.objects.depthIndex",
			"Keyboard.allKeys",
			"the guy",
			"The guy",
			".Size.height",
			".Size.width",
			"LinkPosTo",
			"MouseDrag",
			"MouseHover",
			"followPos",
			"Damage",
			".Pos.y",
			".Pos.x",
			"self.Pos.y",
			"self.Pos.x",
			"o.Size.height",
			"o.Size.width",
			"Panel.objectToPanelPad",
			"self.Pos.x,",
			"self.Pos.x ",
			"self.Pos.y ",
			"self.Pos.x",
			"self.Size.height",
			"self.Size.width",
			"RefreshTexture",
			"DrawToolsHUD.",
			"DrawToolsHUD.iconSheet",
			"DrawToolsHUD.",
			".tools",
			"self.Pos.y",
			"self.Pos.x",
			"o",
			"monkey",
			"o",
			"otype",
			"Pos",
			"o",
			"o:",
			"o.",
			"o",
			"rot",
			"Polygon",
			"self.colors",
			"= 1",
			"rotDirection.angle",
			"{",
			", 255}",
			"type",
			"t.data",
			"t.",
			"dir",
			"Get",
			"data.color",
			"data.max",
			"data.min",
			"spin",
			"z",
			"Map.tileHei",
			"Map.tileHeight",
			"Map.tileWidth",
			"ButtonDown",
			"self:NewButtonTable()",
			"buttons",
			"lifespan",
			"self",
			"and",
			"controller.controller:getAxis",
			"controller.rightStick",
			"controller.leftStick",
			"controller",
			"rightStick",
			"brickSpriteData",
			"names",
			"Sprites",
			"]:",
			"self.objects",
			"speedTime",
			"finalizePath",
			"findPath",
			"playerPath",
			"path",
			"pathClosedList",
			"patClosedList",
			"pathClosedMap",
			"pathOpenList",
			"pathOpenMap",
			"pathFirstRun",
			"pathComplete",
			"",
			"object",
			"addSubButtonStyle",
			"AddSubButtonStyle",
			"composer",
			"object.",
			"markTotal",
			"self",
			"Player",
			"self.speed",
			"indexes",
			"node",
			"Node",
			"currentCharacter",
			"GameFlow",
			"self",
			"debugDrawPathObjects",
			"CdebugDrawPathObjects",
			"CAM.gameCam",
			"CAM.",
			"T",
			"tilemap",
			"currentLayer",
			"self"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"settings":
					{
						"buffer_size": 9362,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										177,
										181
									],
									[
										335,
										339
									],
									[
										462,
										466
									],
									[
										590,
										594
									],
									[
										735,
										739
									],
									[
										751,
										755
									],
									[
										905,
										909
									],
									[
										1185,
										1189
									],
									[
										1466,
										1470
									],
									[
										1761,
										1765
									],
									[
										1994,
										1998
									],
									[
										2247,
										2251
									],
									[
										2412,
										2416
									],
									[
										2521,
										2525
									],
									[
										2596,
										2600
									],
									[
										2703,
										2707
									],
									[
										2946,
										2950
									],
									[
										3128,
										3132
									],
									[
										3311,
										3315
									],
									[
										3589,
										3593
									],
									[
										3743,
										3747
									],
									[
										3920,
										3924
									],
									[
										4104,
										4108
									],
									[
										4228,
										4232
									],
									[
										4446,
										4450
									],
									[
										4750,
										4754
									],
									[
										4916,
										4920
									],
									[
										4993,
										4997
									],
									[
										5122,
										5126
									],
									[
										5287,
										5291
									],
									[
										5457,
										5461
									],
									[
										5588,
										5592
									],
									[
										5732,
										5736
									],
									[
										5831,
										5835
									],
									[
										5897,
										5901
									],
									[
										5926,
										5930
									],
									[
										6024,
										6028
									],
									[
										6163,
										6167
									],
									[
										6259,
										6263
									],
									[
										6443,
										6447
									],
									[
										6567,
										6571
									],
									[
										6722,
										6726
									],
									[
										6851,
										6855
									],
									[
										7046,
										7050
									],
									[
										7355,
										7359
									],
									[
										7492,
										7496
									],
									[
										7674,
										7678
									],
									[
										7821,
										7825
									],
									[
										8000,
										8004
									],
									[
										8248,
										8252
									],
									[
										8451,
										8455
									],
									[
										8618,
										8622
									],
									[
										8773,
										8777
									],
									[
										9089,
										9093
									],
									[
										9293,
										9297
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								9362,
								9362
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 7383.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 164.0
	},
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"/D/CoronaTestCode/Display Stuff 1/main.lua"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": false
}
